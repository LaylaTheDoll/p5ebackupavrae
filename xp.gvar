{{args=[x.lower() for x in &ARGS&]+['X']}}
{{cc,n,chart,logcheck,Set,help="Experience",'\n',args[0] in "chart",args[0] in "log",args[0] in "set",args[0] in "help?"}}
{{create_cc_nx(cc)}}
{{xp,gain,next=get_cc(cc),int(''.join([x for x in args[:3] if x.strip('-+').isdigit()] or ["0"])) if "&*&" and not (chart or help) else 0,min(20,level+1)}}
{{calendar=load_json(get_gvar("1aec09a0-9e25-4700-9c2d-42d79cb0163b"))}}
{{hourOffset=calendar.get('hourOffset',0)+int(get('timezone',0))}}
{{baseYear=calendar.get("yearOffset",1970)}}
{{Time=time()+(3600*hourOffset)}}
{{totalDayCount=int((Time)//86400)}}
{{yearsPassed=totalDayCount//calendar.length}}
{{numLeapYears=len([x for x in range(baseYear,baseYear+yearsPassed-4) if x//calendar.get('leapCycle',4)==x/calendar.get('leapCycle',4)]) if calendar.get('leapCycle') else 0}}
{{yearStartDay=yearsPassed*calendar.length+numLeapYears}}
{{totalDays=totalDayCount-yearStartDay}}
{{year=int((totalDayCount-numLeapYears-1)//calendar.length)+baseYear}}
{{isLeapYear=year//calendar.get('leapCycle',4)==year/calendar.get('leapCycle',4) if numLeapYears else 0}}
{{calendarDay=totalDays%(calendar.length+isLeapYear) or calendar.length+isLeapYear}}
{{hour=int(Time%86400//3600)}}
{{minute=int(Time%86400%3600//60)}}
{{second=int(Time%86400%3600%60)}}
{{monthLengths=[x.length+(isLeapYear and x.name==calendar.get('leapMonth','February')) for x in calendar.months]}}
{{day,month=calendarDay,1}}
{{[(day:=day-monthLengths[x],month:=month+1) for x in range(len(monthLengths)) if month>x and day>monthLengths[x]]}}
{{timestamp=f'{day:02}.{month:02}.{str(year)[2:]} ({hour:02}:{minute:02}:{second:02})'}}
{{xplog=load_json(get('xplog','{}'))}}
{{xplog.update({timestamp:"&*&".replace("set","Total set to",1) if "&*&"[:3]=="set" else "&*&"}) if (Set or gain) and not (logcheck or chart or help) else ""}}
{{listed=[f'**{x[:x.index(" ") if (" " in x and "".join(xplog).count(x[:x.index(" ")])<2) else None]}:** {xplog[x]}' for x in xplog]}}
<drac2>
pages=['' for x in range(20)]
page=0
for x in listed:
 page=page+1 if len(pages[page]+x+'\n')>2000 else page
 pages[page]=pages[page]+x+'\n'
</drac2>
{{pages=[x for x in pages if x] or ["No entries found."]}}
{{calledPage=gain-1 if gain else len(pages)-1}}
{{set_cvar('xplog',dump_json(xplog))}}
{{totals=[0,200,800,2000,6000,12000,20000,30000,44000,62000,82000,104000,128000,158000,194000,234000,278000,326000,382000,450000]}}
{{gain=0 if logcheck else gain}}
{{total=xp*(not Set)+gain if not (chart or logcheck or help) else 0}}
{{ding=(gain and total>=totals[level]) if level<20 else 0}}
-title "<name> {{f"{'sets their Experience total to'*Set or 'gains'*(gain>0) or 'loses'} {gain:,} {cc}".replace('-','')+(f" and levels up to {next}{'nd'*(next==2) or 'rd'*(next==3) or 'th'} level"*ding) if gain else "checks the XP chart" if chart else "checks their Experience Log" if logcheck else "wants more than what's in the footer" if help else f"is currently {level}{'st'*(level==1) or 'nd'*(level==2) or 'rd'*(level==3) or 'th'} level"}}!"
{{required=totals[min(20,level)-1]}}
{{f'-desc "{pages[calledPage]+(f"{n}{n}Page {calledPage+1}/{len(pages)}{n}Use `!xp log #` to view another page." if len(pages)>1 else "") if logcheck else ""}"' if logcheck else f'-desc "{"`"*3}py\nLevel | XP Required\n{"-"*19}\n{n.join([f"{totals.index(x)+1:5} | {x}" for x in totals])}{"`"*3}"' if chart else '''-desc "`!xp` - Run without any arguments, this displays your current total and amount until next level.\n`!xp # [notes]` - Adds to your Experience total. You can include notes to be entered into the log. I will warn you that it is possible to make your log inaccessible if you enter detailed notes. You won't be able to manually access the cvar (`xplog`) once it gets above 2000 characters long (which is around the time it will overflow onto a second page in the alias) and if you get it to the point where it would go over 10,000 characters long, the alias will stop working all together for you. So keep your notes brief if you add them. This otherwise *shouldn't* be too big of a problem unless you're gaining a bunch of small amounts of experience. As a warning, if you include a digit within the first three arguments, it will get appended onto your experience gained. So `!xp 500 xp for killing 5 goblins` is :thumbsup:, but `!xp 500 xp 5 goblins` is :thumbsdown:\n`!xp -# [notes]` - Removes Experience from your total. Same deal with the notes.\n`!xp set # [notes]` - Sets your Experience total to the number provided. Shows up in the log with `set` included.\n`!xp chart` - Pulls up a reference chart for the Experience total required per level.\n`!xp log` - Displays a log of all your Experience gains, losses, and sets."''' if help else f'-desc "Your experience total needs to be at least {required:,} to match your current level!"' if total<totals[min(20,level)-1] else f'''-desc "{"Don't forget"*ding or "You need"} to update your sheet with your proper experience total and level and `!update`."''' if level<20 and total>=(totals[min(19,level)]) else ""}}
{{f'''-f "Log Entry Added:| **{timestamp}:** {"&*&".replace("set","Total set to",1) if "&*&"[:3]=="set" else "&*&"}"''' if gain else ''}}
{{next=next+ding}}
{{set_cc(cc,gain)if Set else gain and mod_cc(cc,gain)}}
{{'' if chart or logcheck or help else f'-f "Current Experience|{total:,}"'}}
{{nexttotal=totals[next-1] if level<20 and next<21 else 0}}
{{f'-f "Next Level: {next}|{nexttotal:,} *({nexttotal-total:,} remaining)*"' if nexttotal and not (chart or logcheck or help) else ""}}
-color <color> -thumb <image>
-footer "!xp | !xp # | !xp -# | !xp set # | !xp chart | !xp log | !xp help"